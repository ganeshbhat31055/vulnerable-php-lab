/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
        'Noto Color Emoji';
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
        monospace;
        --color-red-600: oklch(57.7% 0.245 27.325);
        --color-blue-50: oklch(97% 0.014 254.604);
        --color-blue-400: oklch(70.7% 0.165 254.624);
        --color-blue-600: oklch(54.6% 0.245 262.881);
        --color-indigo-300: oklch(78.5% 0.115 274.713);
        --color-indigo-500: oklch(58.5% 0.233 277.117);
        --color-gray-50: oklch(98.5% 0.002 247.839);
        --color-gray-200: oklch(92.8% 0.006 264.531);
        --color-gray-300: oklch(87.2% 0.01 258.338);
        --color-gray-400: oklch(70.7% 0.022 261.325);
        --color-gray-600: oklch(44.6% 0.03 256.802);
        --color-gray-700: oklch(37.3% 0.034 259.733);
        --color-gray-900: oklch(21% 0.034 264.665);
        --color-white: #fff;
        --spacing: 0.25rem;
        --container-7xl: 80rem;
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --leading-relaxed: 1.625;
        --radius-lg: 0.5rem;
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
    }
}
@layer base {
    *, ::after, ::before, ::backdrop, ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }
    html, :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b, strong {
        font-weight: bolder;
    }
    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub, sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol, ul, menu {
        list-style: none;
    }
    img, svg, video, canvas, audio, iframe, embed, object {
        display: block;
        vertical-align: middle;
    }
    img, video {
        max-width: 100%;
        height: auto;
    }
    button, input, select, optgroup, textarea, ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
    }
    @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;
            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden='until-found'])) {
        display: none!important;
    }
}
@layer utilities {
    .order-first {
        order: -9999;
    }
    .container {
        width: 100%;
        @media (width >= 40rem) {
            max-width: 40rem;
        }
        @media (width >= 48rem) {
            max-width: 48rem;
        }
        @media (width >= 64rem) {
            max-width: 64rem;
        }
        @media (width >= 80rem) {
            max-width: 80rem;
        }
        @media (width >= 96rem) {
            max-width: 96rem;
        }
    }
    .-m-4 {
        margin: calc(var(--spacing) * -4);
    }
    .mx-auto {
        margin-inline: auto;
    }
    .my-4 {
        margin-block: calc(var(--spacing) * 4);
    }
    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }
    .mt-5 {
        margin-top: calc(var(--spacing) * 5);
    }
    .mt-8 {
        margin-top: calc(var(--spacing) * 8);
    }
    .mt-16 {
        margin-top: calc(var(--spacing) * 16);
    }
    .mr-1 {
        margin-right: calc(var(--spacing) * 1);
    }
    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }
    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }
    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }
    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }
    .-ml-4 {
        margin-left: calc(var(--spacing) * -4);
    }
    .ml-2 {
        margin-left: calc(var(--spacing) * 2);
    }
    .flex {
        display: flex;
    }
    .grid {
        display: grid;
    }
    .hidden {
        display: none;
    }
    .inline-flex {
        display: inline-flex;
    }
    .h-4 {
        height: calc(var(--spacing) * 4);
    }
    .h-full {
        height: 100%;
    }
    .min-h-screen {
        min-height: 100vh;
    }
    .w-4 {
        width: calc(var(--spacing) * 4);
    }
    .w-full {
        width: 100%;
    }
    .max-w-7xl {
        max-width: var(--container-7xl);
    }
    .flex-col {
        flex-direction: column;
    }
    .flex-wrap {
        flex-wrap: wrap;
    }
    .items-center {
        align-items: center;
    }
    .justify-between {
        justify-content: space-between;
    }
    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }
    .space-x-5 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 5) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-x-reverse)));
        }
    }
    .space-x-6 {
        :where(& > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
        }
    }
    .overflow-hidden {
        overflow: hidden;
    }
    .overflow-y-scroll {
        overflow-y: scroll;
    }
    .rounded {
        border-radius: 0.25rem;
    }
    .rounded-lg {
        border-radius: var(--radius-lg);
    }
    .border-0 {
        border-style: var(--tw-border-style);
        border-width: 0px;
    }
    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }
    .border-t-2 {
        border-top-style: var(--tw-border-style);
        border-top-width: 2px;
    }
    .border-gray-200 {
        border-color: var(--color-gray-200);
    }
    .border-gray-300 {
        border-color: var(--color-gray-300);
    }
    .bg-blue-600 {
        background-color: var(--color-blue-600);
    }
    .bg-gray-50 {
        background-color: var(--color-gray-50);
    }
    .bg-red-600 {
        background-color: var(--color-red-600);
    }
    .bg-white {
        background-color: var(--color-white);
    }
    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .from-blue-50 {
        --tw-gradient-from: var(--color-blue-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
    .to-blue-400 {
        --tw-gradient-to: var(--color-blue-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
    .object-cover {
        object-fit: cover;
    }
    .object-center {
        object-position: center;
    }
    .p-2 {
        padding: calc(var(--spacing) * 2);
    }
    .p-6 {
        padding: calc(var(--spacing) * 6);
    }
    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }
    .px-5 {
        padding-inline: calc(var(--spacing) * 5);
    }
    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }
    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }
    .py-5 {
        padding-block: calc(var(--spacing) * 5);
    }
    .py-6 {
        padding-block: calc(var(--spacing) * 6);
    }
    .pb-4 {
        padding-bottom: calc(var(--spacing) * 4);
    }
    .text-center {
        text-align: center;
    }
    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }
    .leading-relaxed {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }
    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }
    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }
    .text-gray-200 {
        color: var(--color-gray-200);
    }
    .text-gray-400 {
        color: var(--color-gray-400);
    }
    .text-gray-600 {
        color: var(--color-gray-600);
    }
    .text-gray-700 {
        color: var(--color-gray-700);
    }
    .text-gray-900 {
        color: var(--color-gray-900);
    }
    .text-indigo-300 {
        color: var(--color-indigo-300);
    }
    .text-indigo-500 {
        color: var(--color-indigo-500);
    }
    .hover\:bg-gray-300 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-gray-300);
            }
        }
    }
    .hover\:text-base {
        &:hover {
            @media (hover: hover) {
                font-size: var(--text-base);
                line-height: var(--tw-leading, var(--text-base--line-height));
            }
        }
    }
    .hover\:text-gray-900 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-gray-900);
            }
        }
    }
    .focus\:outline-none {
        &:focus {
            --tw-outline-style: none;
            outline-style: none;
        }
    }
    .sm\:w-2\/3 {
        @media (width >= 40rem) {
            width: calc(2/3 * 100%);
        }
    }
    .md\:mt-0 {
        @media (width >= 48rem) {
            margin-top: calc(var(--spacing) * 0);
        }
    }
    .md\:mb-0 {
        @media (width >= 48rem) {
            margin-bottom: calc(var(--spacing) * 0);
        }
    }
    .md\:mb-2 {
        @media (width >= 48rem) {
            margin-bottom: calc(var(--spacing) * 2);
        }
    }
    .md\:h-36 {
        @media (width >= 48rem) {
            height: calc(var(--spacing) * 36);
        }
    }
    .md\:flex-row {
        @media (width >= 48rem) {
            flex-direction: row;
        }
    }
    .lg\:order-none {
        @media (width >= 64rem) {
            order: 0;
        }
    }
    .lg\:mb-0 {
        @media (width >= 64rem) {
            margin-bottom: calc(var(--spacing) * 0);
        }
    }
    .lg\:h-48 {
        @media (width >= 64rem) {
            height: calc(var(--spacing) * 48);
        }
    }
    .lg\:w-1\/3 {
        @media (width >= 64rem) {
            width: calc(1/3 * 100%);
        }
    }
    .lg\:grid-cols-3 {
        @media (width >= 64rem) {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }
    .lg\:items-center {
        @media (width >= 64rem) {
            align-items: center;
        }
    }
    .lg\:justify-center {
        @media (width >= 64rem) {
            justify-content: center;
        }
    }
    .lg\:justify-end {
        @media (width >= 64rem) {
            justify-content: flex-end;
        }
    }
}
@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}
@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}
@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-leading {
    syntax: "*";
    inherits: false;
}
@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}
@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
        *, ::before, ::after, ::backdrop {
            --tw-space-x-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
        }
    }
}
